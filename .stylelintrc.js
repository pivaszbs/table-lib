module.exports = {
    extends: 'stylelint-config-standard',
    plugins: ['./node_modules/stylelint-order'],
    rules: {
        'order/properties-order': [
            {
                emptyLineBefore: 'always',
                properties: ['position', 'top', 'right', 'bottom', 'left', 'z-index'],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    'display',
                    'visibility',
                    'float',
                    'clear',
                    'overflow',
                    'overflow-x',
                    'overflow-y',
                    '-ms-overflow-x',
                    '-ms-overflow-y',
                    'clip',
                    '-ms-zoom',
                    'zoom',
                    'max-zoom',
                    'min-zoom',
                    'user-zoom',
                    '-webkit-flex-direction',
                    '-moz-flex-direction',
                    '-ms-flex-direction',
                    '-o-flex-direction',
                    'flex-direction',
                    '-webkit-flex-order',
                    '-moz-flex-order',
                    '-ms-flex-order',
                    '-o-flex-order',
                    'flex-order',
                    '-webkit-flex-pack',
                    '-moz-flex-pack',
                    '-ms-flex-pack',
                    '-o-flex-pack',
                    'flex-pack',
                    '-webkit-flex-align',
                    '-moz-flex-align',
                    '-ms-flex-align',
                    '-o-flex-align',
                    'flex-align',
                ],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    '-webkit-box-sizing',
                    '-moz-box-sizing',
                    'box-sizing',
                    'width',
                    'min-width',
                    'max-width',
                    'height',
                    'min-height',
                    'max-height',
                    'margin',
                    'margin-top',
                    'margin-right',
                    'margin-bottom',
                    'margin-left',
                    'padding',
                    'padding-top',
                    'padding-right',
                    'padding-bottom',
                    'padding-left',
                ],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    'table-layout',
                    'caption-side',
                    'empty-cells',
                    'border-spacing',
                    'border-collapse',
                    'list-style',
                    'list-style-position',
                    'list-style-type',
                    'list-style-image',
                    'quotes',
                ],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    'content',
                    'counter-increment',
                    'counter-reset',
                    'resize',
                    'cursor',
                    'nav-index',
                    'nav-up',
                    'nav-right',
                    'nav-down',
                    'nav-left',
                    '-webkit-transition',
                    '-moz-transition',
                    '-ms-transition',
                    '-o-transition',
                    'transition',
                    '-webkit-transition-delay',
                    '-moz-transition-delay',
                    '-ms-transition-delay',
                    '-o-transition-delay',
                    'transition-delay',
                    '-webkit-transition-timing-function',
                    '-moz-transition-timing-function',
                    '-ms-transition-timing-function',
                    '-o-transition-timing-function',
                    'transition-timing-function',
                    '-webkit-transition-duration',
                    '-moz-transition-duration',
                    '-ms-transition-duration',
                    '-o-transition-duration',
                    'transition-duration',
                    '-webkit-transition-property',
                    '-moz-transition-property',
                    '-ms-transition-property',
                    '-o-transition-property',
                    'transition-property',
                    '-webkit-transform',
                    '-moz-transform',
                    '-ms-transform',
                    '-o-transform',
                    'transform',
                    '-webkit-transform-origin',
                    '-moz-transform-origin',
                    '-ms-transform-origin',
                    '-o-transform-origin',
                    'transform-origin',
                    '-webkit-animation',
                    '-moz-animation',
                    '-ms-animation',
                    '-o-animation',
                    'animation',
                    '-webkit-animation-name',
                    '-moz-animation-name',
                    '-ms-animation-name',
                    '-o-animation-name',
                    'animation-name',
                    '-webkit-animation-duration',
                    '-moz-animation-duration',
                    '-ms-animation-duration',
                    '-o-animation-duration',
                    'animation-duration',
                    '-webkit-animation-play-state',
                    '-moz-animation-play-state',
                    '-ms-animation-play-state',
                    '-o-animation-play-state',
                    'animation-play-state',
                    '-webkit-animation-timing-function',
                    '-moz-animation-timing-function',
                    '-ms-animation-timing-function',
                    '-o-animation-timing-function',
                    'animation-timing-function',
                    '-webkit-animation-delay',
                    '-moz-animation-delay',
                    '-ms-animation-delay',
                    '-o-animation-delay',
                    'animation-delay',
                    '-webkit-animation-iteration-count',
                    '-moz-animation-iteration-count',
                    '-ms-animation-iteration-count',
                    '-o-animation-iteration-count',
                    'animation-iteration-count',
                    '-webkit-animation-direction',
                    '-moz-animation-direction',
                    '-ms-animation-direction',
                    '-o-animation-direction',
                    'animation-direction',
                    'text-align',
                    '-webkit-text-align-last',
                    '-moz-text-align-last',
                    '-ms-text-align-last',
                    'text-align-last',
                    'vertical-align',
                    'white-space',
                    'text-decoration',
                    'text-emphasis',
                    'text-emphasis-position',
                    'text-emphasis-style',
                    'text-emphasis-color',
                    'text-indent',
                    '-ms-text-justify',
                    'text-justify',
                    'text-transform',
                    'text-outline',
                    'text-wrap',
                    '-ms-text-overflow',
                    'text-overflow',
                    'text-overflow-ellipsis',
                    'text-overflow-mode',
                    'letter-spacing',
                    'word-spacing',
                    '-ms-writing-mode',
                    '-ms-word-wrap',
                    'word-wrap',
                    '-ms-word-break',
                    'word-break',
                    '-moz-tab-size',
                    '-o-tab-size',
                    'tab-size',
                    '-webkit-hyphens',
                    '-moz-hyphens',
                    'hyphens',
                ],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    'opacity',
                    "-ms-filter:'progid:DXImageTransform.Microsoft.Alpha",
                    'filter:progid:DXImageTransform.Microsoft.Alpha(Opacity',
                    '-ms-interpolation-mode',
                    '-webkit-filter',
                    '-ms-filter',
                    'filter',
                    'color',
                    'border',
                    'border-width',
                    'border-style',
                    'border-color',
                    'border-top',
                    'border-top-width',
                    'border-top-style',
                    'border-top-color',
                    'border-right',
                    'border-right-width',
                    'border-right-style',
                    'border-right-color',
                    'border-bottom',
                    'border-bottom-width',
                    'border-bottom-style',
                    'border-bottom-color',
                    'border-left',
                    'border-left-width',
                    'border-left-style',
                    'border-left-color',
                    '-webkit-border-radius',
                    '-moz-border-radius',
                    'border-radius',
                    '-webkit-border-top-left-radius',
                    '-moz-border-radius-topleft',
                    'border-top-left-radius',
                    '-webkit-border-top-right-radius',
                    '-moz-border-radius-topright',
                    'border-top-right-radius',
                    '-webkit-border-bottom-right-radius',
                    '-moz-border-radius-bottomright',
                    'border-bottom-right-radius',
                    '-webkit-border-bottom-left-radius',
                    '-moz-border-radius-bottomleft',
                    'border-bottom-left-radius',
                    '-webkit-border-image',
                    '-moz-border-image',
                    '-o-border-image',
                    'border-image',
                    '-webkit-border-image-source',
                    '-moz-border-image-source',
                    '-o-border-image-source',
                    'border-image-source',
                    '-webkit-border-image-slice',
                    '-moz-border-image-slice',
                    '-o-border-image-slice',
                    'border-image-slice',
                    '-webkit-border-image-width',
                    '-moz-border-image-width',
                    '-o-border-image-width',
                    'border-image-width',
                    '-webkit-border-image-outset',
                    '-moz-border-image-outset',
                    '-o-border-image-outset',
                    'border-image-outset',
                    '-webkit-border-image-repeat',
                    '-moz-border-image-repeat',
                    '-o-border-image-repeat',
                    'border-image-repeat',
                    '-webkit-border-top-image',
                    '-moz-border-top-image',
                    '-o-border-top-image',
                    'border-top-image',
                    '-webkit-border-right-image',
                    '-moz-border-right-image',
                    '-o-border-right-image',
                    'border-right-image',
                    '-webkit-border-bottom-image',
                    '-moz-border-bottom-image',
                    '-o-border-bottom-image',
                    'border-bottom-image',
                    '-webkit-border-left-image',
                    '-moz-border-left-image',
                    '-o-border-left-image',
                    'border-left-image',
                    '-webkit-border-corner-image',
                    '-moz-border-corner-image',
                    '-o-border-corner-image',
                    'border-corner-image',
                    '-webkit-border-top-left-image',
                    '-moz-border-top-left-image',
                    '-o-border-top-left-image',
                    'border-top-left-image',
                    '-webkit-border-top-right-image',
                    '-moz-border-top-right-image',
                    '-o-border-top-right-image',
                    'border-top-right-image',
                    '-webkit-border-bottom-right-image',
                    '-moz-border-bottom-right-image',
                    '-o-border-bottom-right-image',
                    'border-bottom-right-image',
                    '-webkit-border-bottom-left-image',
                    '-moz-border-bottom-left-image',
                    '-o-border-bottom-left-image',
                    'border-bottom-left-image',
                    'outline',
                    'outline-width',
                    'outline-style',
                    'outline-color',
                    'outline-offset',
                    'background',
                    'filter:progid:DXImageTransform.Microsoft.AlphaImageLoader',
                    'background-color',
                    'background-image',
                    'background-attachment',
                    'background-position',
                    '-ms-background-position-x',
                    '-ms-background-position-y',
                    'background-position-x',
                    'background-position-y',
                    'background-clip',
                    'background-origin',
                    '-webkit-background-size',
                    '-moz-background-size',
                    '-o-background-size',
                    'background-size',
                    'background-repeat',
                    'box-decoration-break',
                    '-webkit-box-shadow',
                    '-moz-box-shadow',
                    'box-shadow',
                    'text-shadow',
                ],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    'font',
                    'font-weight',
                    'font-style',
                    'font-variant',
                    'font-size-adjust',
                    'font-stretch',
                    'font-size',
                    'font-family',
                    'line-height',
                ],
            },
            {
                emptyLineBefore: 'always',
                properties: [
                    'src',
                    'pointer-events',
                    'unicode-bidi',
                    'direction',
                    '-webkit-columns',
                    '-moz-columns',
                    'columns',
                    '-webkit-column-span',
                    '-moz-column-span',
                    'column-span',
                    '-webkit-column-width',
                    '-moz-column-width',
                    'column-width',
                    '-webkit-column-count',
                    '-moz-column-count',
                    'column-count',
                    '-webkit-column-fill',
                    '-moz-column-fill',
                    'column-fill',
                    '-webkit-column-gap',
                    '-moz-column-gap',
                    'column-gap',
                    '-webkit-column-rule',
                    '-moz-column-rule',
                    'column-rule',
                    '-webkit-column-rule-width',
                    '-moz-column-rule-width',
                    'column-rule-width',
                    '-webkit-column-rule-style',
                    '-moz-column-rule-style',
                    'column-rule-style',
                    '-webkit-column-rule-color',
                    '-moz-column-rule-color',
                    'column-rule-color',
                    'break-before',
                    'break-inside',
                    'break-after',
                    'page-break-before',
                    'page-break-inside',
                    'page-break-after',
                    'orphans',
                    'widows',
                    'orientation',
                ],
            },
        ],
        'selector-pseudo-class-no-unknown': [
            true,
            {
                ignorePseudoClasses: ['global'],
            },
        ],
        'selector-pseudo-element-no-unknown': [
            true,
            {
                ignorePseudoElements: ['global'],
            },
        ],
        'shorthand-property-no-redundant-values': null, // Disallow redundant values in shorthand properties.
        'max-nesting-depth': 2, // Limit the depth of nesting.
        'no-descending-specificity': true, // Disallow selectors of lower specificity from coming after overriding selectors of higher specificity.
        'no-duplicate-selectors': true, // Disallow duplicate selectors.
        'no-unknown-animations': true, // Disallow unknown animations.
        'color-named': 'never', // Require (where possible) or disallow named colors.
        'time-min-milliseconds': 50, // Specify the minimum number of milliseconds for time values.
        // 'value-no-vendor-prefix': true, // Disallow vendor prefixes for values.
        'declaration-no-important': true, // Disallow !important within declarations.
        'selector-max-attribute': 1, // Limit the number of attribute selectors in a selector.
        'selector-max-class': 5, // Limit the number of classes in a selector.
        'selector-max-combinators': 3, // Limit the number of combinators in a selector.
        'selector-max-compound-selectors': 4, // Limit the number of compound selectors in a selector.
        'selector-max-id': 0, // Limit the number of id selectors in a selector.
        'selector-max-type': 3, // Limit the number of type in a selector.
        'selector-max-universal': 1, // Limit the number of universal selectors in a selector.
        'selector-no-vendor-prefix': true, // Disallow vendor prefixes for selectors.
        'media-feature-name-no-vendor-prefix': true, // Disallow vendor prefixes for media feature names.
        'font-family-name-quotes': 'always-unless-keyword', // Specify whether or not quotation marks should be used around font family names.
        'font-weight-notation': 'numeric', // Require numeric or named (where possible) font-weight values.
        'font-family-no-missing-generic-family-keyword': [
            true,
            {
                ignoreFontFamilies: ['YS Text'],
            },
        ], // Disallow missing generic families in lists of font family names.
        'function-comma-newline-after': 'never-multi-line', // Require a newline or disallow whitespace after the commas of functions.
        'function-comma-newline-before': 'never-multi-line', // Require a newline or disallow whitespace before the commas of functions.
        'function-parentheses-newline-inside': 'never-multi-line', // Require a newline or disallow whitespace on the inside of the parentheses of functions.
        'function-parentheses-space-inside': 'never', // Require a single space or disallow whitespace on the inside of the parentheses of functions.
        'function-url-quotes': 'always', // Require or disallow quotes for urls.
        'number-leading-zero': 'never', // Require or disallow a leading zero for fractional numbers less than 1.
        'string-quotes': 'single', // Specify single or double quotes around strings.
        'value-keyword-case': 'lower', // Specify lowercase or uppercase for keywords values.
        'value-list-comma-newline-before': 'never-multi-line', // Require a newline or disallow whitespace before the commas of value lists.
        'custom-property-empty-line-before': null, // Require or disallow an empty line before custom properties (Autofixable).
        'declaration-empty-line-before': null, // Require or disallow an empty line before declarations.
        'declaration-block-semicolon-newline-before': 'never-multi-line', // Require a newline or disallow whitespace before the semicolons of declaration blocks.
        'declaration-block-semicolon-space-after': 'never-single-line', // Require a single space or disallow whitespace after the semicolons of declaration blocks.
        'block-closing-brace-newline-before': 'always', // Require a newline or disallow whitespace before the closing brace of blocks.
        'block-opening-brace-newline-after': 'always', // Require a newline after the opening brace of blocks.
        'block-opening-brace-newline-before': 'always', // Require a newline or disallow whitespace before the opening brace of blocks.
        'block-opening-brace-space-before': null, // Require a single space or disallow whitespace before the opening brace of blocks.
        'selector-attribute-quotes': 'always', // Require or disallow quotes for attribute values.
        'selector-pseudo-class-case': 'lower', // Specify lowercase or uppercase for pseudo-class selectors.
        'selector-pseudo-element-colon-notation': 'single', // Specify single or double colon notation for applicable pseudo-elements.
        'selector-list-comma-newline-before': 'never-multi-line', // Require a newline or disallow whitespace before the commas of selector lists.
        'media-query-list-comma-newline-after': 'never-multi-line', // Require a newline or disallow whitespace after the commas of media query lists.
        'media-query-list-comma-newline-before': 'never-multi-line', // Require a newline or disallow whitespace before the commas of media query lists.
        'at-rule-name-newline-after': 'always-multi-line', //Require a newline after at-rule names.
        'at-rule-semicolon-space-before': 'never', // Require a single space or disallow whitespace before the semicolons of at
        'comment-empty-line-before': null, // Require or disallow an empty line before comments.
        indentation: 4, // Specify indentation (Autofixable).
        'max-line-length': [
            120,
            {
                // Limit the length of a line.
                ignorePattern: '/url\\(.*\\)/',
            },
        ],
        'no-missing-end-of-source-newline': true, // Disallow missing end-of-source newlines (Autofixable).
    },
};
